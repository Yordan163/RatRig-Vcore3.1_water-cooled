#############################################################################################################
### CONFIGURATION GENERATED BY THE RATOS CONFIGURATOR
### Everything below [include RatOS.cfg] will override default RatOS behavior
#############################################################################################################
[include RatOS.cfg]

#############################################################################################################
### MACRO CONFIGURATION
### Configure the behavior of RatOS macros
### See: https://os.ratrig.com/docs/configuration/macros
#############################################################################################################
[gcode_macro RatOS]'
variable_relative_extrusion: False
variable_preheat_extruder: True
variable_calibrate_bed_mesh: True
variable_nozzle_priming: "primeblob"
variable_start_print_park_in: "back"
variable_start_print_park_z_height: 50
variable_end_print_park_in: "back"
variable_pause_print_park_in: "back"
variable_macro_travel_speed: 300
variable_adaptive_mesh: True  # To enable adaptive priming set variable_adaptive_mesh to 
                              # True in your RatOS macro configuration section (if it isn't already there, add it)
                              # Default False. Whether to enable adaptive meshing: True / False	

#############################################################################################################
### USER OVERRIDES & CUSTOM CONFIGURATION
### Anything custom you want to add, or RatOS configuration you want to override, do it here.
### This section is pre-populated with the most common settings you may want to change.
### See: https://os.ratrig.com/docs/configuration/includes-and-overrides
###
### It is recommended that you follow these steps to properly calibrate your printer:
### 0) Sanity check and PID Tuning: https://www.klipper3d.org/Config_checks.html
### 1) Z-offset calibration: run BEACON_RATOS_CALIBRATE to automatically calibrate your beacon for scan and contact.
###    IMPORTANT: Ensure the beacon is properly mounted and the nozzle and meltzone is clean by unloading
###    the filament (if it's loaded) and make sure there's no ooze or gunk on the nozzle when the hotend is at printing temperature.
### 2) Pressure Advance: https://www.klipper3d.org/Pressure_Advance.html
### 3) Skew Correction: https://www.klipper3d.org/Skew_Correction.html
### 4) Resonance Compensation: https://www.klipper3d.org/Resonance_Compensation.html
### RatOS has dedicated macro's to generate shaper graphs for deeper analysis (requires accelerometer).
### Use MEASURE_COREXY_BELT_TENSION to compare tension between belts, and use
### GENERATE_SHAPER_GRAPHS to generate the resonance graphs for analysing and manually entering input shaper
### configuration.
### You can run SHAPER_CALIBRATE to automatically calibrate your input shaper configuration, if you just want
### to get started.
### Additionally, you can use the Realtime Analysis Tool to analyze your printer's performance in real-time.
### Read more about klipper here: https://www.klipper3d.org/Overview.html
#############################################################################################################
#[include OrbiterSensor.cfg]
[include config_backup.cfg]
#[include is.cfg]
[include timelapse.cfg]
# Enable object exclusion
[exclude_object]
#[include adxlmcu.cfg]

#[gcode_macro RatOS]
#variable_bed_heat_soak_time: 1200
#variable_hotend_heat_soak_time: 300
#variable_start_print_park_in: 'primeblob'

################Orbiter Smart Filament Sensor 
[filament_switch_sensor toolhead_filament_sensor_t0]
pause_on_runout: False
event_delay: 0.1
switch_pin: PG13
runout_gcode:
    _ON_TOOLHEAD_FILAMENT_SENSOR_RUNOUT TOOLHEAD=0
insert_gcode:
    _ON_TOOLHEAD_FILAMENT_SENSOR_INSERT TOOLHEAD=0

[gcode_button toolhead_filament_sensor_button_t0]
pin: !PG14
release_gcode:
    {% if (printer.print_stats.state == "printing") %}
            _ON_TOOLHEAD_FILAMENT_SENSOR_CLOG TOOLHEAD=0
    {% else %}
            _ON_FILAMENT_SENSOR_BUTTON_PRESSED TOOLHEAD=0
    {% endif %}
press_gcode:

[gcode_macro T0]
variable_enable_insert_detection: True     # enables the insert detection
variable_enable_runout_detection: True     # enables the runout detection
variable_enable_clog_detection: True       # enables the clog detection
variable_unload_after_runout: True         # unload filament after runout has been detected
variable_resume_after_insert: True         # resumes the print after inserting new filament
[gcode_macro T0]
variable_filament_grabbing_speed: 1     # filament grabbing speed in mm/s
variable_filament_grabbing_length: 5    # filament grabbing length in mm
[gcode_macro T0]
variable_filament_load_speed: 10   # filament nozzle loading speed
variable_extruder_load_speed: 60   # extruder/cooling zone loading speed
[gcode_macro PAUSE]
variable_retract: 1.5   # retract on pause print
variable_extrude: 1.5   # extrude before resume print
[gcode_macro RatOS]
variable_runout_park_in: "front"   # back|front|center = gantry parking position if a runout or clog has been detected
variable_runout_park_x: 50         # float = if configured the x position of the toolhead. if not configured it will park in the middle
[gcode_macro T0]
variable_cooling_position_to_nozzle_distance: 40            # distance between the cooling position and the nozzle
variable_tooolhead_sensor_to_extruder_gear_distance: 15     # distance between the filament sensor trigger point
                                                            # and where the filament hits the extruder gears
variable_extruder_gear_to_cooling_position_distance: 30     # distance between the extruder gears and the center of the heatsink cooling tube
variable_filament_loading_nozzle_offset: -10                # offset tuning value. positive or negative number.
                                                            # different nozzles can lead to too much or not enough extrusion while loading the filament

# Enable arcs support
[gcode_arcs]
resolution: 0.1

#---------------------------------------------------- X -----------------------------------------------------
# The A motor in the CoreXY system, located at the rear left of the printer
#------------------------------------------------------------------------------------------------------------
[stepper_x]
dir_pin: x_dir_pin        # Add ! in front of pin name to reverse the direction of stepper_x
rotation_distance: 40     # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
homing_speed: 50
position_min: 0
position_max: 400
position_endstop: 0
endstop_pin: PG6
#---------------------------------------------------- Y -----------------------------------------------------
# The B motor in the CoreXY system, located at the rear right of the printer
#------------------------------------------------------------------------------------------------------------
[stepper_y]
dir_pin: y_dir_pin        # Add ! in front of pin name to reverse the direction of stepper_y
rotation_distance: 40     # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
homing_speed: 50
position_min: 0
position_max: 400
position_endstop: 400
endstop_pin: !PG9
#---------------------------------------------------- Z -----------------------------------------------------
# The left Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z]
dir_pin: !z0_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z
rotation_distance: 4      # 4 for TR8*4 lead screws
homing_speed: 10
position_min: -5
position_max: 400

#---------------------------------------------------- Z1 ----------------------------------------------------
# The rear Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z1]
dir_pin: !z1_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z1
rotation_distance: 4      # 4 for TR8*4 lead screws

#---------------------------------------------------- Z2 ----------------------------------------------------
# The right Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z2]
dir_pin: !z2_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z2
rotation_distance: 4      # 4 for TR8*4 lead screws

#------------------------------------------------- EXTRUDER -------------------------------------------------
# The extruder motor used for pushing filament through the toolhead
#------------------------------------------------------------------------------------------------------------


[extruder]
dir_pin: !e_dir_pin       # Remove ! in front of pin name to reverse the direction of extruder
rotation_distance: 4.63   # Orbiter 2 default
#pressure_advance: 0.05   # Check https://www.klipper3d.org/Pressure_Advance.html for pressure advance tuning.
control: pid
pid_kp: 28.413
pid_ki: 1.334
pid_kd: 151.300
heater_pin: PA2
# Датчик: PT1000 на RTDIN (MAX31865)
sensor_type: MAX31865
sensor_pin: PF8              # CS за RTD на Octopus Pro  
spi_software_miso_pin = PA6
spi_software_mosi_pin = PA7
spi_software_sclk_pin = PA5
spi_speed: 4000000           # 4 MHz комуникация
rtd_use_50Hz_filter: True    # включен филтър за 50 Hz (Европа)
rtd_nominal_r: 1000          # PT1000
rtd_reference_r: 4300        # 4.3 kΩ резистор на Octopus Pro
rtd_num_of_wires: 2          # 2-жилен сензор
# PID настройки (примерни – после пусни PID_CALIBRATE!)
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300

[heater_bed]
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114

#############################################################################################################
### Fans
#############################################################################################################
[fan]
## Print Cooling Fan - CNC_FAN0
## This needs to be a 5v positive digital pin, example is for Octopus and Octopus Pro variants
pin: PG12
## Tune to your needs. This fan needs some extra time to spin up
## before bridges which can and should be compensated for in the slicer
kick_start_time: 0.3
## Increase this value if the fan doesn't turn at 20% speed
off_below: 0.2
## Set PWM frequency suited to your driver
cycle_time: 0.0003


[output_pin water_cooling] 
pin: PD15
value: 1
shutdown_value: 0


#############################################################################################################
### LED/RGB
#############################################################################################################

[output_pin Caselight] 
pin: PD14
value: 1
pwm: true
hardware_pwm: true
shutdown_value: 0
cycle_time: 0.001

#############################################################################################################
### BED 
#############################################################################################################


[bed_mesh]
horizontal_move_z: 5
mesh_min: 20,20
mesh_max:365,360
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: .2

[z_tilt]
z_positions:
	0,0
	200,394
	406,0

points:
	40,15
	205,360
	366,15
		
horizontal_move_z: 20
retries: 10
retry_tolerance: 0.02

#############################################################################################################
### Heated Chamber
#############################################################################################################
#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: PF6

[heater_generic chamber_heater]
gcode_id: chamber_heater
heater_pin: PB11
smooth_time: 10
sensor_type: Generic 3950
sensor_pin: PF5
control: pid
pid_kp: 24.750
pid_ki: 2.578
pid_kd: 59.400
pwm_cycle_time: 0.25
min_temp: 0
max_temp: 200
max_power: 1.0

[heater_fan chamber_heater_fan]
pin: PA8
heater: chamber_heater
heater_temp: 40      # вентилаторът ще изключи чак когато камерата падне под 40°C
fan_speed: 1.0
kick_start_time: 0.2
shutdown_speed: 0.0



[verify_heater chamber_heater]
max_error: 300
check_gain_time: 480
hysteresis: 5
heating_gain: 1

[gcode_macro M141]
gcode:
   SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S}

[gcode_macro M191]
gcode:
   SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S}
   TEMPERATURE_WAIT SENSOR="heater_generic heater_chamber" MINIMUM={params.S}

[temperature_fan chamber_cool]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.0005     #2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
sensor_type: Generic 3950
sensor_pin: PF6
min_temp: 0
max_temp: 70
target_temp: 0
max_speed: 0.8
min_speed: 0
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0
gcode_id: C

# REMEMBER TO CALIBRATE YOUR BEACON!
# Run BEACON_RATOS_CALIBRATE for automatic calibration.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.637973420476538,
#*# 	1.9404389793670767,
#*# 	0.7209006032799982,
#*# 	0.3418849117478806,
#*# 	0.06387787148209258,
#*# 	-0.025678643426017236,
#*# 	0.3091183227731906,
#*# 	0.22628554262223194,
#*# 	-0.1298215596229834,
#*# 	-0.07866225278158674
#*# model_domain = 1.878028205960936e-07,1.9363498591169822e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 50.044590
#*# model_offset = 0.00000
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.270
#*# pid_ki = 3.399
#*# pid_kd = 313.295
